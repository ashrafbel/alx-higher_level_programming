
Import function from module:

    >>> add_integer = __import__('0-add_integer').add_integer

one int arg:

    >>> add_integer(2)
    100

Test one int with second arg:

    >>> add_integer(0)
    98

one float:

    >>> add_integer(9.4)
    107

one negative float:

    >>> add_integer(-10.54)
    88

two integers:

    >>> add_integer(20, 20)
    40

two huge integers:

    >>> add_integer(10021321, 1212122121)
    1222143442

sum huge positive with negative:

    >>> add_integer(108981321, -1228541221)
    -1119559900

huge negative with positive integers:

    >>> add_integer(-899991321, 9122854521)
    8222863200

integer with float:

    >>> add_integer(50, 5.81)
    55

float with integer:

    >>> add_integer(2.5, 15)
    17

float with float:

    >>> add_integer(0.5, 0.5)
    0



Test first arg invalid:

    >>> add_integer("huge", 0)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

Test second arg invalid:

    >>> add_integer(155553, [])
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

two args invalid:

    >>> add_integer(None, None)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

two strings:
>>> add_integer("buff", "size")
Traceback (most recent call last):
    ...
TypeError: a must be an integer

